# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:
    def constructFromPrePost(self, preorder: List[int], postorder: List[int]) -> Optional[TreeNode]:
        if not preorder and not postorder:
            return None
        root=TreeNode()
        root.val=preorder[0]
        if len(preorder)==1:
            return root
        l=preorder[1]
        l_size=postorder.index(l)+1
        root.left=self.constructFromPrePost(preorder[1:l_size+1],postorder[:l_size])
        root.right=self.constructFromPrePost(preorder[l_size+1:],postorder[l_size:-1])
        return root
